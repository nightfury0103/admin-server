{"version":3,"sources":["modules/pages/Account.tsx"],"names":["useStyles","makeStyles","theme","textField","marginLeft","spacing","marginRight","width","Account","dispatch","useDispatch","classes","user","useSelector","auth","React","useState","email","oldPassword","newPassword","confirmPassword","values","setValues","handleChange","name","event","target","value","pt","xl","item","xs","sm","md","id","label","defaultValue","className","onChange","margin","variant","disabled","type","color","onClick","saveData","onUpdateAdminData","style","marginTop"],"mappings":"gOAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,WAAYF,EAAMG,QAAQ,GAC1BC,YAAaJ,EAAMG,QAAQ,GAC3BE,MAAO,YA6GAC,UA1GC,WACZ,IAAMC,EAAWC,cACXC,EAAUX,IAERY,EAASC,aACb,qBAAGC,QADCF,KAIR,EAA4BG,IAAMC,SAAS,CACvCC,MAAK,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMK,MACbC,YAAa,GACbC,YAAa,GACbC,gBAAiB,KAJrB,mBAAOC,EAAP,KAAeC,EAAf,KAMMC,EAAe,SAACC,GAAD,OAAkB,SAACC,GACpCH,EAAU,2BAAKD,GAAN,kBAAeG,EAAOC,EAAMC,OAAOC,WAEhD,OACI,mCACI,cAAC,IAAD,CAAKC,GAAI,CAAEC,GAAI,GAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,CACIC,GAAG,iBACHC,MAAM,QACNC,aAAa,GACbZ,KAAK,QACLa,UAAW1B,EAAQR,UACnBwB,MAAON,EAAOJ,MACdqB,SAAUf,EAAa,SACvBgB,OAAO,SACPC,QAAQ,WACRC,UAAU,MAIlB,cAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,CACIC,GAAG,wBACHC,MAAM,eACNC,aAAa,GACbZ,KAAK,eACLa,UAAW1B,EAAQR,UACnBwB,MAAON,EAAOH,YACdoB,SAAUf,EAAa,eACvBgB,OAAO,SACPC,QAAQ,WACRE,KAAK,eAIb,cAAC,IAAD,CAAMZ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,CACIC,GAAG,wBACHC,MAAM,eACNC,aAAa,GACbZ,KAAK,eACLa,UAAW1B,EAAQR,UACnBwB,MAAON,EAAOF,YACdmB,SAAUf,EAAa,eACvBgB,OAAO,SACPC,QAAQ,WACRE,KAAK,eAIb,cAAC,IAAD,CAAMZ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,CACIC,GAAG,4BACHC,MAAM,mBACNC,aAAa,GACbZ,KAAK,mBACLa,UAAW1B,EAAQR,UACnBwB,MAAON,EAAOD,gBACdkB,SAAUf,EAAa,mBACvBgB,OAAO,SACPC,QAAQ,WACRE,KAAK,eAGb,cAAC,IAAD,CAAMZ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,CACIO,QAAQ,YACRG,MAAM,UACND,KAAK,SACLE,QAAS,WACL,IAAIC,EAAW,CACX5B,MAAOI,EAAOJ,OAAS,GACvBC,YAAaG,EAAOH,aAAe,GACnCC,YAAaE,EAAOF,aAAe,GACnCC,gBAAiBC,EAAOD,iBAAmB,IAE/CX,EAASqC,YAAkBD,KAG/BE,MAAO,CAAEC,UAAW,IAdxB","file":"static/js/23.d1503a21.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { onUpdateAdminData } from '../../redux/actions';\r\nimport Box from '@material-ui/core/Box';\r\nimport GridContainer from '../../@crema/core/GridContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { AppState } from '../../redux/store';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n}));\r\nconst Account = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const { user } = useSelector<AppState, AppState['auth']>(\r\n        ({ auth }) => auth,\r\n    );\r\n\r\n    const [values, setValues] = React.useState({\r\n        email: user?.email,\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const handleChange = (name: string) => (event: any) => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n    };\r\n    return (\r\n        <>\r\n            <Box pt={{ xl: 4 }}>\r\n                <GridContainer>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <TextField\r\n                            id='outlined-email'\r\n                            label='Email'\r\n                            defaultValue=''\r\n                            name='email'\r\n                            className={classes.textField}\r\n                            value={values.email}\r\n                            onChange={handleChange('email')}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            disabled={true}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <TextField\r\n                            id='outlined-old-password'\r\n                            label='Old Password'\r\n                            defaultValue=''\r\n                            name='old-password'\r\n                            className={classes.textField}\r\n                            value={values.oldPassword}\r\n                            onChange={handleChange('oldPassword')}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            type='password'\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <TextField\r\n                            id='outlined-new-password'\r\n                            label='New Password'\r\n                            defaultValue=''\r\n                            name='new-password'\r\n                            className={classes.textField}\r\n                            value={values.newPassword}\r\n                            onChange={handleChange('newPassword')}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            type='password'\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <TextField\r\n                            id='outlined-confirm-password'\r\n                            label='Confirm Password'\r\n                            defaultValue=''\r\n                            name='confirm-password'\r\n                            className={classes.textField}\r\n                            value={values.confirmPassword}\r\n                            onChange={handleChange('confirmPassword')}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            type='password'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            type='button'\r\n                            onClick={() => {\r\n                                let saveData = {\r\n                                    email: values.email || '',\r\n                                    oldPassword: values.oldPassword || '',\r\n                                    newPassword: values.newPassword || '',\r\n                                    confirmPassword: values.confirmPassword || '',\r\n                                }\r\n                                dispatch(onUpdateAdminData(saveData))\r\n                            }}\r\n                            // disabled={isSubmitting}\r\n                            style={{ marginTop: 20 }}\r\n                        >\r\n                            UPDATE\r\n                        </Button>\r\n                    </Grid>\r\n                </GridContainer>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n"],"sourceRoot":""}