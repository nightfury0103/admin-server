{"version":3,"sources":["modules/auth/Signin/SigninJwtAuth.tsx","modules/auth/Signin/index.tsx"],"names":["useStyles","makeStyles","theme","formRoot","textAlign","breakpoints","up","marginBottom","myTextFieldRoot","width","checkboxRoot","marginLeft","pointer","cursor","btnRoot","borderRadius","overrides","MuiCard","root","fontWeight","Fonts","REGULAR","fontSize","textTransform","btnRootFull","dividerRoot","marginRight","textPrimary","color","palette","text","primary","colorTextPrimary","main","underlineNone","textDecoration","textGrey","grey","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","email","required","password","SigninJwtAuth","dispatch","useDispatch","messages","useIntl","classes","Box","flex","display","flexDirection","px","xs","sm","xl","pt","validateOnChange","initialValues","onSubmit","data","setSubmitting","onJwtSignIn","isSubmitting","className","noValidate","autoComplete","mb","placeholder","name","label","IntlMessages","id","variant","lg","type","alignItems","justifyContent","Button","disabled","InfoView","imgRoot","cardRoot","maxWidth","overflow","boxShadow","position","paddingTop","content","left","right","top","height","borderBottomRightRadius","borderBottomLeftRadius","backgroundColor","textUppercase","Signin","md","src","alt","Card","component"],"mappings":"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","file":"static/js/19.6b001192.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n// import { Checkbox } from '@material-ui/core';\r\nimport { Form, Formik, useField } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport InfoView from '../../../@crema/core/InfoView';\r\nimport { onJwtSignIn } from '../../../redux/actions';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport { useIntl } from 'react-intl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\n// import {\r\n//   // Link,\r\n//   useHistory\r\n// } from 'react-router-dom';\r\nimport { Fonts } from 'shared/constants/AppEnums';\r\nimport { CremaTheme } from '../../../types/AppContextPropsType';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  formRoot: {\r\n    textAlign: 'left',\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 24,\r\n    },\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.REGULAR,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  btnRootFull: {\r\n    width: '100%',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 16,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 32,\r\n    },\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\nconst MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Invalid Email')\r\n    .required('Email required'),\r\n  password: yup.string().required('Password required'),\r\n});\r\n\r\ninterface UserSigninProps { }\r\n\r\nconst SigninJwtAuth: React.FC<UserSigninProps> = props => {\r\n  const dispatch = useDispatch();\r\n  // const history = useHistory();\r\n\r\n  // const onGoToForgetPassword = () => {\r\n  //   history.push('/forget-password');\r\n  // };\r\n\r\n  const { messages } = useIntl();\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        px={{ xs: 6, sm: 10, xl: 15 }}\r\n        pt={8}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            email: '',\r\n            password: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            dispatch(onJwtSignIn({ email: data.email, password: data.password }));\r\n            setSubmitting(false);\r\n          }}>\r\n          {({ isSubmitting }) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box mb={{ xs: 5, xl: 8 }}>\r\n                <MyTextField\r\n                  placeholder={messages['common.email']}\r\n                  name='email'\r\n                  label={<IntlMessages id='common.email' />}\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{ xs: 3, lg: 4 }}>\r\n                <MyTextField\r\n                  type='password'\r\n                  placeholder={messages['common.password']}\r\n                  label={<IntlMessages id='common.password' />}\r\n                  name='password'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n              {/* \r\n              <Box\r\n                mb={{ xs: 3, xl: 4 }}\r\n                display='flex'\r\n                flexDirection={{ xs: 'column', sm: 'row' }}\r\n                alignItems={{ sm: 'center' }}\r\n                justifyContent={{ sm: 'space-between' }}\r\n                fontSize={15}>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Checkbox className={classes.checkboxRoot} />\r\n                  <Box className={classes.textGrey} component='span'>\r\n                    <IntlMessages id='common.rememberMe' />\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  color='primary.main'\r\n                  component='span'\r\n                  ml={{ sm: 4 }}\r\n                  className={classes.pointer}\r\n                  onClick={onGoToForgetPassword}\r\n                  fontSize={15}>\r\n                  <IntlMessages id='common.forgetPassword' />\r\n                </Box>\r\n              </Box> */}\r\n\r\n              <Box\r\n                mb={6}\r\n                display='flex'\r\n                flexDirection={{ xs: 'column', sm: 'row' }}\r\n                alignItems={{ sm: 'center' }}\r\n                justifyContent={{ sm: 'space-between' }}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  type='submit'\r\n                  disabled={isSubmitting}\r\n                  className={classes.btnRoot}>\r\n                  <IntlMessages id='common.login' />\r\n                </Button>\r\n\r\n                {/* <Box\r\n                  ml={{ xs: 0, sm: 4 }}\r\n                  mt={{ xs: 3, sm: 0 }}\r\n                  color='text.secondary'\r\n                  fontSize={15}>\r\n                  <Box className={classes.textGrey} component='span' mr={2}>\r\n                    <IntlMessages id='common.dontHaveAccount' />\r\n                  </Box>\r\n                  <Box component='span'>\r\n                    <Link\r\n                      to='/signup'\r\n                      className={clsx(\r\n                        classes.underlineNone,\r\n                        classes.colorTextPrimary,\r\n                      )}>\r\n                      <IntlMessages id='common.signup' />\r\n                    </Link>\r\n                  </Box>\r\n                </Box> */}\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SigninJwtAuth;\r\n","import React from 'react';\r\nimport SigninJwtAuth from './SigninJwtAuth';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  imgRoot: {\r\n    cursor: 'pointer',\r\n    display: 'inline-block',\r\n    width: 140,\r\n  },\r\n  cardRoot: {\r\n    maxWidth: '36rem',\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n    paddingTop: 20,\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingTop: 32,\r\n    },\r\n    '&:before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      width: 130,\r\n      height: 9,\r\n      borderBottomRightRadius: 80,\r\n      borderBottomLeftRadius: 80,\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  textUppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\n\r\nconst Signin: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\r\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\r\n        <img\r\n          className={classes.imgRoot}\r\n          src='/assets/images/logo-white-with-name.png'\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Card className={classes.cardRoot}>\r\n          <Box px={{xs: 6, sm: 10, xl: 15}}>\r\n            <Box\r\n              component='h2'\r\n              mb={{xs: 3, xl: 6}}\r\n              color='text.primary'\r\n              fontWeight={Fonts.REGULAR}\r\n              fontSize={{xs: 24, xl: 26}}>\r\n              <IntlMessages id='common.login' />\r\n            </Box>\r\n          </Box>\r\n          <SigninJwtAuth />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"sourceRoot":""}