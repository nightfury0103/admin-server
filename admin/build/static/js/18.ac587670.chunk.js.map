{"version":3,"sources":["modules/auth/ForgetPassword/ForgetPasswordJwtAuth.tsx","modules/auth/ForgetPassword/index.tsx"],"names":["useStyles","makeStyles","theme","image","display","cursor","width","card","maxWidth","textAlign","padding","overflow","position","boxShadow","breakpoints","up","paddingLeft","paddingRight","left","right","top","height","borderBottomRightRadius","borderBottomLeftRadius","marginRight","marginLeft","backgroundColor","palette","primary","main","form","textField","btnRoot","fontWeight","Fonts","REGULAR","textTransform","fontSize","paddingTop","paddingBottom","borderRadius","overrides","MuiCard","root","textSecondary","color","underlineNone","textDecoration","textGrey","grey","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","email","IntlMessages","id","required","ForgetPasswordJwtAuth","classes","Box","flex","flexDirection","justifyContent","mb","xs","md","xl","className","src","alt","alignItems","Card","component","Typography","validateOnChange","initialValues","onSubmit","data","setSubmitting","resetForm","isSubmitting","lg","placeholder","name","label","variant","Button","disabled","type","pt","to","clsx","InfoView","ForgetPassword"],"mappings":"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","file":"static/js/18.ac587670.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport InfoView from '../../../@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport {Link} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  image: {\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n    width: 140,\r\n  },\r\n  card: {\r\n    maxWidth: 576,\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: 24,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: 48,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 48,\r\n      paddingRight: 48,\r\n    },\r\n    '&:before': {\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      width: 130,\r\n      height: 9,\r\n      borderBottomRightRadius: 80,\r\n      borderBottomLeftRadius: 80,\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  form: {\r\n    textAlign: 'left',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n  btnRoot: {\r\n    width: '100%',\r\n    fontWeight: Fonts.REGULAR,\r\n    textTransform: 'capitalize',\r\n    fontSize: 16,\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n  },\r\n  textSecondary: {\r\n    color: theme.palette.primary.main,\r\n    marginLeft: 10,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('' + <IntlMessages id='validation.emailFormat' />)\r\n    .required('' + <IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\ninterface ForgetPasswordProps {}\r\n\r\nconst ForgetPasswordJwtAuth: React.FC<ForgetPasswordProps> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\r\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\r\n        <img\r\n          className={classes.image}\r\n          src={'/assets/images/logo-white-with-name.png'}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Card className={classes.card}>\r\n          <Box\r\n            component='h2'\r\n            mb={{xs: 6, xl: 8}}\r\n            color='text.primary'\r\n            fontWeight={Fonts.REGULAR}\r\n            fontSize={{xs: 24, xl: 26}}>\r\n            <IntlMessages id='common.forgetPassword' />\r\n          </Box>\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              setSubmitting(true);\r\n              // reset password api  call here\r\n              setSubmitting(false);\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8}}>\r\n                  <MyTextField\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n                <Box mb={4}>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    disabled={isSubmitting}\r\n                    className={classes.btnRoot}\r\n                    type='submit'>\r\n                    <IntlMessages id='common.sendNewPassword' />\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Box\r\n                  pt={3}\r\n                  textAlign='center'\r\n                  fontSize={15}\r\n                  className={classes.textGrey}>\r\n                  <IntlMessages id='common.alreadyHavePassword' />\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.textSecondary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <InfoView />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordJwtAuth;\r\n","import React from 'react';\r\nimport ForgetPasswordJwtAuth from './ForgetPasswordJwtAuth';\r\n\r\nconst ForgetPassword: React.FC<{}> = () => {\r\n  return <ForgetPasswordJwtAuth />;\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"sourceRoot":""}